import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Download, Copy, FileText, CheckCircle } from 'lucide-react';
import { useState, useCallback } from 'react';

interface CodeOutputProps {
  generatedCode: string | null;
  isGenerating: boolean;
  isRegenerating?: boolean;
}

export const CodeOutput = ({ generatedCode, isGenerating, isRegenerating }: CodeOutputProps) => {
  const [copied, setCopied] = useState(false);

  const handleCopy = useCallback(async () => {
    if (generatedCode) {
      await navigator.clipboard.writeText(generatedCode);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    }
  }, [generatedCode]);

  const handleDownload = useCallback(() => {
    if (generatedCode) {
      const blob = new Blob([generatedCode], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'video_to_oled.ino';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }
  }, [generatedCode]);

  const sampleCode = `/*
  Video to OLED Display - Generated by Arduino Video Converter
  
  Arduino code will be automatically generated when you upload a video.
  The code will include all frame data and be ready to copy/paste into Arduino IDE.
  
  Features:
  - Complete frame data in PROGMEM
  - Optimized for your display size and library
  - Proper frame timing and loop structure
  - Ready-to-use Arduino sketch
*/`;

  return (
    <Card className="p-6 bg-gradient-card border-tech-border">
      <div className="space-y-4">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <FileText className="w-5 h-5 text-primary" />
            <h3 className="text-lg font-semibold">Arduino Code</h3>
          </div>
          {isGenerating && (
            <Badge variant="secondary" className="bg-primary/10 text-primary border-primary/20">
              Generating...
            </Badge>
          )}
          {isRegenerating && !isGenerating && (
            <Badge variant="secondary" className="bg-blue-500/10 text-blue-400 border-blue-500/20">
              Updating...
            </Badge>
          )}
          {generatedCode && !isGenerating && !isRegenerating && (
            <Badge variant="secondary" className="bg-green-500/10 text-green-400 border-green-500/20">
              <CheckCircle className="w-3 h-3 mr-1" />
              Auto-Generated
            </Badge>
          )}
        </div>

        <div className="bg-tech-bg rounded-xl border border-tech-border overflow-hidden">
          <div className="flex items-center justify-between p-3 bg-tech-surface border-b border-tech-border">
            <span className="text-sm font-mono text-muted-foreground">video_to_oled.ino</span>
            <div className="flex gap-2">
              <Button
                variant="ghost"
                size="sm"
                onClick={handleCopy}
                disabled={!generatedCode && !sampleCode}
                className="text-muted-foreground hover:text-primary"
              >
                {copied ? <CheckCircle className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
              </Button>
              <Button
                variant="ghost"
                size="sm"
                onClick={handleDownload}
                disabled={!generatedCode}
                className="text-muted-foreground hover:text-primary"
              >
                <Download className="w-4 h-4" />
              </Button>
            </div>
          </div>
          
          <div className="p-4 max-h-96 overflow-y-auto">
            <pre className="text-sm font-mono text-foreground whitespace-pre-wrap">
              {generatedCode || sampleCode}
            </pre>
          </div>
        </div>

        {generatedCode && (
          <div className="flex flex-col sm:flex-row gap-3">
            <Button 
              onClick={handleDownload}
              className="flex-1 bg-gradient-primary hover:shadow-electric transition-all duration-300"
            >
              <Download className="w-4 h-4 mr-2" />
              Download .ino File
            </Button>
            <Button 
              variant="outline" 
              onClick={handleCopy}
              className="flex-1 border-primary text-primary hover:bg-primary hover:text-primary-foreground"
            >
              {copied ? <CheckCircle className="w-4 h-4 mr-2" /> : <Copy className="w-4 h-4 mr-2" />}
              {copied ? 'Copied!' : 'Copy Code'}
            </Button>
          </div>
        )}
      </div>
    </Card>
  );
};